/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package timbangantruckindahjaya;

import javax.swing.JOptionPane;
import java.util.Properties;
import java.util.Date;
import java.text.SimpleDateFormat;
import java.text.DateFormat;
import java.io.InputStream;
import java.util.HashMap;
import jssc.*;

import timbangantruckindahjaya.modul.mod_timbangan;
import timbangantruckindahjaya.modul.mod_user;

import net.sf.jasperreports.view.*;
import net.sf.jasperreports.engine.*;
import net.sf.jasperreports.engine.util.*;

import org.jdesktop.swingx.autocomplete.AutoCompleteDecorator;
import timbangantruckindahjaya.setting.PropertiesSource;
/**
 *
 * @author taufiq
 */
public class formTimbang2 extends javax.swing.JDialog {

    /**
     * Creates new form formTimbang
     */
    private int baudrate, 
                databits,
                stopbits,
                parity;
    
    private String port;
    
    static SerialPort serialPort;
    
    static String valueWheight;
    
    private java.util.HashMap DataQuery, DataInsert;
    
    private final mod_timbangan ModTimbangan;
    private final mod_user ModUser;
    
    private static int idTimbangan;
    
    private Object[][] NamaBarang;
    
    /**
     * String in/out
     */
    private static String InOut;
       
    
    private final timbangantruckindahjaya.func.Log log = new timbangantruckindahjaya.func.Log();
    
    PropertiesSource ps = new PropertiesSource();
    
    public formTimbang2(int par) {
        
        /**
        * set idTimbangan
        * jika 0 maka new
        * jika >0 maka edit
        **/
        idTimbangan = par;
        
        ModTimbangan = new mod_timbangan(); 
        ModUser = new mod_user();
        
        initComponents();        
        this.setLocationRelativeTo(null);        
        this.setVariableComm();        
        this.setNamaBarang();
        
        //cek kondisi
        this.CekKondisi();
        
        this.DoTimbang();        
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jLabel9 = new javax.swing.JLabel();
        jLabel10 = new javax.swing.JLabel();
        jLabel11 = new javax.swing.JLabel();
        txtTimbang = new javax.swing.JTextField();
        txtGross = new javax.swing.JFormattedTextField();
        txtTara = new javax.swing.JFormattedTextField();
        txtNetto = new javax.swing.JFormattedTextField();
        cmdCommit = new javax.swing.JButton();
        jLabel12 = new javax.swing.JLabel();
        jLabel13 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        jLabel17 = new javax.swing.JLabel();
        jLabel22 = new javax.swing.JLabel();
        txtBeratTampung = new javax.swing.JFormattedTextField();
        jLabel23 = new javax.swing.JLabel();
        cmdTambahTimbangan = new javax.swing.JButton();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel3 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jLabel6 = new javax.swing.JLabel();
        jLabel7 = new javax.swing.JLabel();
        jLabel8 = new javax.swing.JLabel();
        txtTanggal = new javax.swing.JFormattedTextField();
        txtJamMasuk = new javax.swing.JFormattedTextField();
        txtJamKeluar = new javax.swing.JFormattedTextField();
        txtNoPol = new javax.swing.JTextField();
        txtRelasi = new javax.swing.JTextField();
        txtSupir = new javax.swing.JTextField();
        txtKeterangan = new javax.swing.JTextField();
        jLabel14 = new javax.swing.JLabel();
        jLabel15 = new javax.swing.JLabel();
        cmbNamaBarang = new javax.swing.JComboBox();
        jLabel18 = new javax.swing.JLabel();
        txtPo = new javax.swing.JTextField();
        txtSj = new javax.swing.JTextField();
        jLabel19 = new javax.swing.JLabel();
        jLabel20 = new javax.swing.JLabel();
        txtTanggalKeluar = new javax.swing.JFormattedTextField();
        jPanel4 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        txtTiket = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        jLabel21 = new javax.swing.JLabel();
        txtKodeTimbangan = new javax.swing.JTextField();
        jPanel5 = new javax.swing.JPanel();
        cmdSimpan = new javax.swing.JButton();
        cmdPrint = new javax.swing.JButton();
        cmdCancel = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        setTitle("Form Timbangan - PT. Spinmill Indah Industry");
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder("Form Timbangan"));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder("Timbang"));

        jLabel9.setText("Berat Gross");

        jLabel10.setText("Berat Tara");

        jLabel11.setText("Berat Netto");

        txtTimbang.setEditable(false);
        txtTimbang.setBackground(new java.awt.Color(0, 0, 0));
        txtTimbang.setFont(new java.awt.Font("Tahoma", 1, 48)); // NOI18N
        txtTimbang.setForeground(new java.awt.Color(51, 255, 0));
        txtTimbang.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTimbang.setText("0");

        txtGross.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtGross.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtGross.setText("0");
        txtGross.setEnabled(false);
        txtGross.setName("txtGross"); // NOI18N

        txtTara.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtTara.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtTara.setText("0");
        txtTara.setEnabled(false);
        txtTara.setName("txtTara"); // NOI18N

        txtNetto.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtNetto.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtNetto.setText("0");
        txtNetto.setEnabled(false);
        txtNetto.setName("txtNetto"); // NOI18N

        cmdCommit.setText("Commit Timbangan");
        cmdCommit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCommitActionPerformed(evt);
            }
        });

        jLabel12.setBackground(new java.awt.Color(0, 0, 0));
        jLabel12.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        jLabel12.setForeground(new java.awt.Color(51, 255, 0));
        jLabel12.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel12.setText("KG");
        jLabel12.setOpaque(true);

        jLabel13.setText("KG");

        jLabel16.setText("KG");

        jLabel17.setText("KG");

        jLabel22.setText("Berat Tampungan");

        txtBeratTampung.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.NumberFormatter()));
        txtBeratTampung.setHorizontalAlignment(javax.swing.JTextField.RIGHT);
        txtBeratTampung.setText("0");
        txtBeratTampung.setEnabled(false);
        txtBeratTampung.setName("txtGross"); // NOI18N

        jLabel23.setText("KG");

        cmdTambahTimbangan.setText("Tambah Timbangan");
        cmdTambahTimbangan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdTambahTimbanganActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                        .addComponent(jSeparator1, javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addComponent(txtTimbang, javax.swing.GroupLayout.PREFERRED_SIZE, 405, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel12)))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtNetto, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtTara, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(jPanel2Layout.createSequentialGroup()
                                .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addComponent(txtGross, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel17, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdCommit, javax.swing.GroupLayout.PREFERRED_SIZE, 137, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(txtBeratTampung, javax.swing.GroupLayout.PREFERRED_SIZE, 130, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel23, javax.swing.GroupLayout.PREFERRED_SIZE, 26, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(cmdTambahTimbangan)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(txtTimbang, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel12, javax.swing.GroupLayout.PREFERRED_SIZE, 74, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel22, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtBeratTampung, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel23)
                    .addComponent(cmdTambahTimbangan))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jSeparator1, javax.swing.GroupLayout.PREFERRED_SIZE, 10, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 19, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel9, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtGross, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel16))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel10, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtTara, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel13))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel11, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(txtNetto, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel17)))
                    .addComponent(cmdCommit, javax.swing.GroupLayout.PREFERRED_SIZE, 72, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap())
        );

        jPanel3.setBorder(javax.swing.BorderFactory.createTitledBorder("Informasi Timbang"));

        jLabel2.setText("Tanggal Masuk");

        jLabel4.setText("No. Pol Kendaraan *");

        jLabel5.setText("Relasi *");

        jLabel6.setText("Nama Barang *");

        jLabel7.setText("Nama Supir *");

        jLabel8.setText("Keterangan");

        txtTanggal.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd-MM-yyyy"))));
        txtTanggal.setEnabled(false);

        txtJamMasuk.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("hh:mm"))));
        txtJamMasuk.setEnabled(false);

        txtJamKeluar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("hh:mm"))));
        txtJamKeluar.setEnabled(false);

        txtNoPol.setFont(new java.awt.Font("Tahoma", 0, 48)); // NOI18N
        txtNoPol.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtNoPolActionPerformed(evt);
            }
        });
        txtNoPol.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtNoPolKeyReleased(evt);
            }
        });

        txtRelasi.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtRelasiKeyTyped(evt);
            }
        });

        txtSupir.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSupirKeyReleased(evt);
            }
        });

        txtKeterangan.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtKeteranganKeyReleased(evt);
            }
        });

        jLabel14.setText("Jam Masuk");

        jLabel15.setText("Jam Keluar");

        cmbNamaBarang.setMaximumRowCount(20);
        cmbNamaBarang.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbNamaBarangActionPerformed(evt);
            }
        });

        jLabel18.setText("No. PO *");

        txtPo.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtPoKeyReleased(evt);
            }
        });

        txtSj.addKeyListener(new java.awt.event.KeyAdapter() {
            public void keyReleased(java.awt.event.KeyEvent evt) {
                txtSjKeyReleased(evt);
            }
        });

        jLabel19.setText("No. Surat Jalan *");

        jLabel20.setText("Tanggal Keluar");

        txtTanggalKeluar.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.DateFormatter(new java.text.SimpleDateFormat("dd-MM-yyyy"))));
        txtTanggalKeluar.setEnabled(false);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtSupir))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(cmbNamaBarang, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel5, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtRelasi))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtJamMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                        .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)))
                                .addGap(18, 18, 18)
                                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtJamKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel3Layout.createSequentialGroup()
                                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                        .addComponent(txtTanggalKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE))))
                            .addGroup(jPanel3Layout.createSequentialGroup()
                                .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(txtNoPol))))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtKeterangan))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtPo))
                    .addGroup(jPanel3Layout.createSequentialGroup()
                        .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtSj)))
                .addGap(10, 10, 10))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel20, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTanggalKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addComponent(txtTanggal, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJamMasuk, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel15, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtJamKeluar, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtNoPol, javax.swing.GroupLayout.PREFERRED_SIZE, 53, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtRelasi, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel6, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbNamaBarang, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel7, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSupir, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel18, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtPo, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel19, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtSj, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel8, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKeterangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jLabel1.setBackground(new java.awt.Color(255, 255, 255));
        jLabel1.setFont(new java.awt.Font("Tahoma", 3, 14)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 102, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.LEFT);
        jLabel1.setText((idTimbangan==0)?"Timbangan Pertama":"Timbangan Kedua");

        txtTiket.setEnabled(false);

        jLabel3.setText("No.Tiket:");

        jLabel21.setText("Timbangan:");

        txtKodeTimbangan.setEditable(false);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 184, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 71, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 54, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel21))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(txtTiket, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtKodeTimbangan, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 29, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(jPanel4Layout.createSequentialGroup()
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3, javax.swing.GroupLayout.PREFERRED_SIZE, 20, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtTiket, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel21)
                    .addComponent(txtKodeTimbangan, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
        );

        cmdSimpan.setText("Simpan");
        cmdSimpan.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdSimpanActionPerformed(evt);
            }
        });

        cmdPrint.setText("Update & Print Struk");
        cmdPrint.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdPrintActionPerformed(evt);
            }
        });

        cmdCancel.setText("Batal");
        cmdCancel.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmdCancelActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createSequentialGroup()
                .addComponent(cmdSimpan, javax.swing.GroupLayout.PREFERRED_SIZE, 112, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(cmdPrint)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(cmdCancel, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE))
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                .addComponent(cmdSimpan)
                .addComponent(cmdPrint)
                .addComponent(cmdCancel))
        );

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, 494, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jPanel5, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                .addComponent(jPanel4, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel5, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, 523, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
     private void comList() 
     {
        String[] portNames = SerialPortList.getPortNames();
        for (String portName : portNames) {
            System.out.println(portName);
        }
    }
    
    private void CekKondisi()
    {
        /**
         * ketika idTimbangan 0 maka merupakan form baru
         */
        
        if(formTimbang2.idTimbangan>0)
        {
            this.setDataQuery();
            
            this.setGross((String)DataQuery.get("txtGross"));
            this.setTara((String)DataQuery.get("txtTara"));
            this.setNetto((String)DataQuery.get("txtNetto"));
            
            this.setNoPol((String)DataQuery.get("txtNoPol"));
            
            this.setDate((String)DataQuery.get("txtTanggal"));
            this.setDateOut((String)DataQuery.get("txtTanggalKeluar"));
            this.setTimeIn((String)DataQuery.get("txtJamMasuk"));
            this.setTimeOut((String)DataQuery.get("txtJamKeluar"));
            this.setTiket((String)DataQuery.get("txtTiket"));
            this.setRelasi((String)DataQuery.get("txtRelasi"));
            this.setNamaSupir((String)DataQuery.get("txtSupir"));
            this.setKeterangan((String)DataQuery.get("txtKeterangan"));
            
            this.setPo((String)DataQuery.get("txtPo"));
            this.setSj((String)DataQuery.get("txtSj"));
            
            
            
            this.setCmbNamaBarang((String)DataQuery.get("cmbNamaBarang"));
//            this.cmbNamaBarang.setEnabled(false);
            
            this.cmdSimpan.setEnabled(false);
            InOut = "IN";
//            System.out.println((String)DataQuery.get("print"));
            if(String.valueOf(DataQuery.get("print")).equals("1"))
            {
                this.txtRelasi.setEnabled(false);
                this.txtSupir.setEnabled(false);
                this.txtPo.setEnabled(false);
                this.txtSj.setEnabled(false);
                this.cmbNamaBarang.setEnabled(false);
                this.txtKeterangan.setEnabled(false);
                
                this.cmdCommit.setEnabled(false);
                this.cmdTambahTimbangan.setEnabled(false);
                this.cmdPrint.setText("Print Struk");
//                this.cmdCancel.setEnabled(true);                
            }
            
//            System.out.println((String)DataQuery.get("cmbNamaBarang"));
        }
        else
        {
            this.setNoPol("");
            
            this.setDate("");
            
            this.setTimeIn("");
            
            this.setTiket("");
            this.setRelasi("");
            this.setNamaSupir("");
            this.setKeterangan("");
            
            cmdPrint.setEnabled(false);
            
        }
    }
    
    //for date input YYYY-mm-dd or dd-mm-YYYY
    private String confDate(String dt, String format)
    {
        DateFormat df = new SimpleDateFormat(format);
        Date cDate;
        
        if(!dt.isEmpty())
        {
            
            String[] dates = dt.split("-");
            
            if(dates[0].length()==4)
                cDate = new Date(Integer.valueOf(dates[0])-1900, Integer.valueOf(dates[1])-1, Integer.valueOf(dates[2]));
            else
                cDate = new Date(Integer.valueOf(dates[2])-1900, Integer.valueOf(dates[1])-1, Integer.valueOf(dates[0]));
            
            return (String)df.format(cDate);
        }
        
        return "";
    }
    
    private void setDate(String dt)
    {
        DateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        Date cDate;
        
        if(dt.isEmpty())
        {
            
            cDate = new Date();
            
            txtTanggal.setText(df.format(cDate).toString());
        }
        else 
        {
            
            
            txtTanggal.setText(this.confDate(dt, "dd-MM-yyyy"));
        }
            
    }
    
    private void setDateOut(String dt)
    {
        DateFormat df = new SimpleDateFormat("dd-MM-yyyy");
        Date cDate;
        
        if(dt.isEmpty())
        {
            
            cDate = new Date();
            
            txtTanggalKeluar.setText(df.format(cDate).toString());
        }
        else 
        {
            
            
            txtTanggalKeluar.setText(this.confDate(dt, "dd-MM-yyyy"));
        }
            
    }
    
    private void setDataQuery()
    {
        Object[] data;
        DataQuery = new HashMap();
        if(idTimbangan>0)
        {
            data = ModTimbangan.dataTable(idTimbangan);
            
            if(data.length>0)
            {
                DataQuery.put("txtTanggal", (data[0]!=null?data[0].toString():""));
                DataQuery.put("txtTanggalKeluar", (data[1]!=null?data[1].toString():""));
                DataQuery.put("txtTiket", (data[2]!=null?data[2].toString():""));
                DataQuery.put("txtNoPol", (data[3]!=null?data[3].toString():""));
                DataQuery.put("txtRelasi", (data[4]!=null?data[4].toString():""));
                DataQuery.put("cmbNamaBarang", (data[5]!=null?data[5].toString():"0"));
                DataQuery.put("txtSupir", (data[6]!=null?data[6].toString():""));
                DataQuery.put("txtGross", (data[7]!=null?data[7].toString():""));
                DataQuery.put("txtTara", (data[8]!=null?data[8].toString():""));
                DataQuery.put("txtNetto", (data[9]!=null?data[9].toString():""));
                DataQuery.put("txtJamMasuk", (data[12]!=null?data[12].toString():""));
                DataQuery.put("txtJamKeluar", (data[13]!=null?data[13].toString():""));
                DataQuery.put("txtKeterangan", (data[14]!=null?data[14].toString():""));
                DataQuery.put("txtPo", (data[19]!=null?data[19].toString():""));
                DataQuery.put("txtSj", (data[18]!=null?data[18].toString():""));
                DataQuery.put("print", (data[17]!=null?data[17].toString():""));
                
            }
        }
    }
    
    private void DoTimbang()
    {
        if(this.DataQuery!=null)
        {
            if(String.valueOf(this.DataQuery.get("print")).equals("1"))
                return;
        }
        
        serialPort = new SerialPort(port);
        ReadConn("in");
    }
    
//    private String tiket()
//    {
//        if(!this.txtTiket.getText().equals(""))
//        {
//            return this.txtTiket.getText();
//        }
//        
//        return this.sTiket();
//        
//    }
    
    private int saveData()
    {
        DataInsert = new HashMap();
        
        
        
        
        DataInsert.put("txtTanggal", this.confDate(this.txtTanggal.getText(), "yyyy-MM-dd"));
        DataInsert.put("txtTiket", this.txtTiket.getText());
        DataInsert.put("txtNoPol", this.txtNoPol.getText());
        DataInsert.put("txtRelasi", this.txtRelasi.getText());
        DataInsert.put("cmbNamaBarang", this.getCmbNamaBarang());
        DataInsert.put("txtSupir", this.txtSupir.getText());
        DataInsert.put("txtGross", this.txtGross.getText());
        DataInsert.put("txtTara", this.txtTara.getText());
        DataInsert.put("txtNetto", this.txtNetto.getText());
        DataInsert.put("txtJamMasuk", this.txtJamMasuk.getText());
        DataInsert.put("txtJamKeluar", this.txtJamKeluar.getText());
        DataInsert.put("txtKeterangan", this.txtKeterangan.getText());
        DataInsert.put("txtSj", this.txtSj.getText());
        DataInsert.put("txtPo", this.txtPo.getText());
        
        DataInsert.put("timbangan_in", this.txtKodeTimbangan.getText());
        
        int aInc = this.ModTimbangan.saveData(DataInsert);
        return aInc;
    }
    
    private boolean updateData()
    {
        DataInsert = new HashMap();
        
        DataInsert.put("txtTanggalKeluar", this.confDate(this.txtTanggalKeluar.getText(), "yyyy-MM-dd"));
        DataInsert.put("txtTiket", this.txtTiket.getText());
        DataInsert.put("txtNoPol", this.txtNoPol.getText());
        DataInsert.put("txtRelasi", this.txtRelasi.getText());
        DataInsert.put("cmbNamaBarang", this.getCmbNamaBarang());
        DataInsert.put("txtSupir", this.txtSupir.getText());
        DataInsert.put("txtGross", this.txtGross.getText());
        DataInsert.put("txtTara", this.txtTara.getText());
        DataInsert.put("txtNetto", this.txtNetto.getText());
        DataInsert.put("txtJamMasuk", this.txtJamMasuk.getText());
        DataInsert.put("txtJamKeluar", this.txtJamKeluar.getText());
        DataInsert.put("txtKeterangan", this.txtKeterangan.getText());
        DataInsert.put("txtSj", this.txtSj.getText());
        DataInsert.put("txtPo", this.txtPo.getText());
        
        DataInsert.put("print", "1");
        
        DataInsert.put("timbangan_out", this.txtKodeTimbangan.getText());
        
        DataInsert.put("InOut", InOut);
        
        DataInsert.put("id", idTimbangan);
        
        return this.ModTimbangan.updateData(DataInsert);
    }
    
    private boolean updateData(String print)
    {
        DataInsert = new HashMap();
        
        DataInsert.put("txtTanggalKeluar", this.confDate(this.txtTanggal.getText(), "yyyy-MM-dd"));
        DataInsert.put("txtTiket", this.txtTiket.getText());
        DataInsert.put("txtNoPol", this.txtNoPol.getText());
        DataInsert.put("txtRelasi", this.txtRelasi.getText());
        DataInsert.put("cmbNamaBarang", this.getCmbNamaBarang());
        DataInsert.put("txtSupir", this.txtSupir.getText());
        DataInsert.put("txtGross", this.txtGross.getText());
        DataInsert.put("txtTara", this.txtTara.getText());
        DataInsert.put("txtNetto", this.txtNetto.getText());
        DataInsert.put("txtJamMasuk", this.txtJamMasuk.getText());
        DataInsert.put("txtJamKeluar", this.txtJamKeluar.getText());
        DataInsert.put("txtKeterangan", this.txtKeterangan.getText());
        DataInsert.put("txtSj", this.txtSj.getText());
        DataInsert.put("txtPo", this.txtPo.getText());
        
        DataInsert.put("print", print);
        
        DataInsert.put("timbangan_out", this.txtKodeTimbangan.getText());
        
        DataInsert.put("InOut", InOut);
        
        DataInsert.put("id", idTimbangan);
        
        return this.ModTimbangan.updateData(DataInsert);
    }
    
    private Object getCmbNamaBarang()
    {
        int idx = this.cmbNamaBarang.getSelectedIndex()-1;
        
        return NamaBarang[idx][1];
    }
    
    private void setCmbNamaBarang(String idx)
    {
        int id = Integer.valueOf(idx);
        
        for(int i=0 ; i<NamaBarang.length ; i++)
        {
            if(Integer.valueOf(NamaBarang[i][1].toString())==id)
            {
                cmbNamaBarang.setSelectedIndex(i+1);
                break;
            }
        }
        
//        cmbNamaBarang.enable(false);
    }
    
    private void setGross(String param)
    {
        if(!param.equals(""))
            txtGross.setText(param);
    }
    
    private void setTara(String param)
    {
        if(!param.equals(""))
        {
            txtTara.setText(param);
            
            this.setNetto(Integer.toString(Math.abs(Integer.valueOf(txtGross.getText()) - Integer.valueOf(param))));
        }
    }
    
    private void setNetto(String param)
    {
        if(!param.equals(""))
            txtNetto.setText(param);
    }
    
    private void setKeterangan(String param)
    {
        if(!param.equals(""))
            txtKeterangan.setText(param);
    }
    
    private void setNamaBarang()
    {
        NamaBarang = ModTimbangan.NamaBarang();
        cmbNamaBarang.addItem("");
        for (Object[] NamaBarang1 : NamaBarang) 
        {
            cmbNamaBarang.addItem(NamaBarang1[0]);
        }
        
        AutoCompleteDecorator.decorate(cmbNamaBarang);
    }
    
    private void setNamaSupir(String param)
    {
        if(!param.equals(""))
            txtSupir.setText(param);
    }
    
    private void setNoPol(String param)
    {
        if(!param.equals(""))
        {
            txtNoPol.setText(param);
            txtNoPol.enable(false);
        }
    }
    
    private void setPo(String param)
    {
        if(!param.equals(""))
            txtPo.setText(param);
    }
    
    private void setRelasi(String param)
    {
        if(!param.equals(""))
            txtRelasi.setText(param);
    }
    
    private void setSj(String param)
    {
        if(!param.equals(""))
            txtSj.setText(param);
    }
    
    private String sTiket()
    {
        String tiket = "";
        System.out.println(this.txtTiket.getText());
        if(!this.txtTiket.getText().isEmpty())
        {
            
            ModTimbangan.removeTempTiket(this.txtTiket.getText());
        }
        
        Object selectedCmb = NamaBarang[this.cmbNamaBarang.getSelectedIndex()-1][1];
        int val = ModTimbangan.getTicketBarang(selectedCmb)+1;
        
        boolean cek = false;
        
        while(cek==false)
        {
            tiket = NamaBarang[this.cmbNamaBarang.getSelectedIndex()-1][2].toString()+String.format("%010d", val);
            int avail_tiket = ModTimbangan.getCountTempTicket(tiket);
            
            if(avail_tiket==0)
            {
                cek = true;
                
                ModTimbangan.saveTempTiket(tiket);
            }            
            else
            {
                val+=1;
            }
        }
        
        return tiket;
    }
    
    private void setTiket(String param)
    {
        if("".equals(param))
        {
//            this.txtTiket.setText(String.valueOf(ModTimbangan.getTicket()+1));
            if(!String.valueOf(this.cmbNamaBarang.getSelectedItem()).equals(""))
            {
                Object selectedCmb = NamaBarang[this.cmbNamaBarang.getSelectedIndex()-1][1];
                
                if(idTimbangan>0)
                {
                    if(this.DataQuery.get("cmbNamaBarang").equals(selectedCmb))
                    {
                        this.setTiket((String)this.DataQuery.get("txtTiket"));
                        return;
                    }
                }
                
                this.txtTiket.setText(this.sTiket());
            }
            else
            {
                this.txtTiket.setText("");
            }
        }
        else
        {
            this.txtTiket.setText(param);
        }
    }
     
    
    private void setTimeIn(String timeIn)
    {
        if(timeIn.isEmpty() || timeIn.equals("00:00:00"))
        {
            DateFormat df = new SimpleDateFormat("H:m:s");
            Date cDate = new Date();
            
            txtJamMasuk.setText(df.format(cDate).toString());
        }
        else 
            txtJamMasuk.setText(timeIn);
            
    }
    private void setTimeOut(String timeOut)
    {
                
        if(timeOut.isEmpty() || "00:00:00".equals(timeOut))
        {
            DateFormat df = new SimpleDateFormat("H:m:s");
            Date cDate = new Date();
            
            txtJamKeluar.setText(df.format(cDate).toString());
        }
        else 
            txtJamKeluar.setText(timeOut);
            
    }
    
    private void ReadConn(String InOrOut)
    {
        try {
            if(!serialPort.isOpened())
            {
                serialPort.openPort();//Open serial port
                serialPort.setParams(baudrate, databits, stopbits, parity);//Set params. Also you can set params by this string: serialPort.setParams(9600, 8, 1, 0);
            }
            int mask =  SerialPort.MASK_RXCHAR;
            
            serialPort.setEventsMask(mask);
            SerialPortReader spr;
            spr = null;
            
            spr = new SerialPortReader();
//            if(idTimbangan==0 && Double.valueOf(txtGross.getText())<1)
//            {
//                spr = new SerialPortReader(txtGross);
//            }
//            else if(idTimbangan>0 && Double.valueOf(txtTara.getText())<1)
//            {
//                spr = new SerialPortReader(txtTara);
//            }
//            System.out.println(spr);
            if(spr != null)
                serialPort.addEventListener(spr);
            
        }
        catch (SerialPortException ex) {
            System.out.println(ex);
        }
    }
     
    private void setVariableComm()
    {
        Properties prop = ps.OpenProperties();
        
        if(prop!=null)
        {
            baudrate = Integer.valueOf(prop.getProperty("baudrate"));
            databits = Integer.valueOf(prop.getProperty("databits"));
            stopbits = Integer.valueOf(prop.getProperty("stopbits"));
            parity = Integer.valueOf(prop.getProperty("parity"));
            port = prop.getProperty("port");
            
            this.txtKodeTimbangan.setText(prop.getProperty("timbangan_no"));
        }
        else
        {
            baudrate = 9600;
            databits = 8;
            stopbits = 1;
            parity = 0;
            port = "COM1";
        }
    }
    
    private void printStruk()
    {
        try
        {
            JasperReport jr = null;
            
            db mt = new db();
            mt.setConnVar();
            
            
            HashMap hp = new HashMap();
            hp.put("timbangan_id", idTimbangan);
            hp.put("printed_by", ModUser.UserName(String.valueOf(Session.User.getUserId())));
            
            InputStream fileStruk = getClass().
                    getResourceAsStream("/timbangantruckindahjaya/report/rptTimbangan.jasper");
            jr = (JasperReport)JRLoader.loadObject(fileStruk);
            
            JasperPrint jP;
            jP = JasperFillManager.fillReport(jr, hp,mt.open());
            JasperViewer.viewReport(jP,false);
            JasperViewer.setDefaultLookAndFeelDecorated(true);
        }
        catch(JRException e)
        {
            e.printStackTrace();
        }
    }
    
    private void cmdSimpanActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdSimpanActionPerformed
        // TODO add your handling code here:
        int res = 0;
        
        if(idTimbangan==0)
        {
            if(Integer.valueOf(this.txtGross.getText().trim())<1)
            {
                JOptionPane.showMessageDialog(null, "Lakukan penmbangan pertama terlebih dahulu","Perhatian",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(this.txtNoPol.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Nomor Polisi Kendaraan harus diisi","Perhatian",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(this.txtRelasi.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Relasi harus diisi","Perhatian",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(this.cmbNamaBarang.getSelectedItem().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Nama Barang harus diisi","Perhatian",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(this.txtSupir.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Nama Supir Kendaraan harus diisi","Perhatian",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(this.txtTiket.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Tiket Kosong, Sistem Akan Merefresh No Tiket. Tolong dicek kembali","Perhatian",JOptionPane.ERROR_MESSAGE);
                this.setTiket("");
                return;
            }
            
            
            res = this.saveData();
            
            ModTimbangan.removeTempTiket(this.txtTiket.getText(),"2");
            if(res>0)
            {
                log.InsertLog("SAVE_TIMBANGAN", "Timbangan pertama id="+res+", TIKET="+this.txtTiket.getText().trim());
                JOptionPane.showMessageDialog(null, "Data Berhasil Disimpan","Info",JOptionPane.INFORMATION_MESSAGE);
                this.dispose();
                return;
            }
            
        }
        
        JOptionPane.showMessageDialog(null, "Data Gagal Disimpan","Perhatian",JOptionPane.ERROR_MESSAGE);
    }//GEN-LAST:event_cmdSimpanActionPerformed

    private void cmdPrintActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdPrintActionPerformed
        // TODO add your handling code here:
        if(DataQuery.get("print").toString().equals("0"))
        {
            if(Integer.parseInt(this.txtTara.getText())<1)
            {
                JOptionPane.showMessageDialog(null, "Lakukan penimbangan kedua terlebih dahulu","Perhatian",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(this.txtRelasi.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Relasi harus diisi","Perhatian",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(this.cmbNamaBarang.getSelectedItem().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Nama Barang harus diisi","Perhatian",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else if(this.txtSupir.getText().trim().equals(""))
            {
                JOptionPane.showMessageDialog(null, "Nama Supir Kendaraan harus diisi","Perhatian",JOptionPane.ERROR_MESSAGE);
                return;
            }
            else
            {
                
                if(String.valueOf(DataQuery.get("cmbNamaBarang")).equals("7")) //Apakah limbah
                {
                    boolean prnt = false;
                    
                    if(InOut.equals("IN"))
                    {
                        if(this.txtPo.getText().trim().equals(""))
                        {
                            JOptionPane.showMessageDialog(null, "Jangan Lupa Nanti Mengisi Purchase Order (PO). Data Disimpan!","Information",JOptionPane.INFORMATION_MESSAGE);
                            
                        }
                        else if(this.txtSj.getText().trim().equals(""))
                        {
                            JOptionPane.showMessageDialog(null, "Jangan Lupa Nanti Mengisi Surat Jalan (SJ). Data Disimpan!","Information",JOptionPane.INFORMATION_MESSAGE);
                            
                        }
                        else
                        {
                            prnt = true;
                        }
                    }
                    else if(InOut.equals("OUT"))
                    {
                        if(this.txtSj.getText().trim().equals(""))
                        {
                            JOptionPane.showMessageDialog(null, "Jangan Lupa Nanti Mengisi Surat Jalan (SJ). Data Disimpan!","Information",JOptionPane.INFORMATION_MESSAGE);
                        }
                        else
                        {
                            prnt = true;
                        }
                    }                    
                    
                    if(this.updateData((prnt==true?"1":"0"))==true)
                    {
                        ModTimbangan.removeTempTiket(this.txtTiket.getText(),"2");
                        log.InsertLog("SAVE_TIMBANGAN", "Timbangan Kedua id="+idTimbangan);

                    }
                    
                    if(prnt==true)
                    {
                        log.InsertLog("PRINT_STRUK", "Timbangan id="+idTimbangan);
                        this.printStruk();
                    }
                    this.dispose();
                    return;
                }
                
                if(InOut.equals("IN"))
                {
                    if(this.txtPo.getText().trim().equals(""))
                    {
                        JOptionPane.showMessageDialog(null, "Purchase Order (PO) Harus Diisi Terlebih Dahulu","Perhatian",JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                    else if(this.txtSj.getText().trim().equals(""))
                    {
                        JOptionPane.showMessageDialog(null, "Surat Jalan Harus Diisi Terlebih Dahulu","Perhatian",JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                else if(InOut.equals("OUT"))
                {
                    if(this.txtSj.getText().trim().equals(""))
                    {
                        JOptionPane.showMessageDialog(null, "Surat Jalan Harus Diisi Terlebih Dahulu","Perhatian",JOptionPane.ERROR_MESSAGE);
                        return;
                    }
                }
                
                if(this.updateData()==true)
                {
                    log.InsertLog("SAVE_TIMBANGAN", "Timbangan Kedua id="+idTimbangan+", TIKET="+this.txtTiket.getText().trim());
                    
                }
            }
        }
        
        log.InsertLog("PRINT_STRUK", "Timbangan id="+idTimbangan);
        this.printStruk();
        this.dispose();
        
    }//GEN-LAST:event_cmdPrintActionPerformed

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        // TODO add your handling code here:
        if(!this.txtTiket.getText().isEmpty())
        {
            ModTimbangan.removeTempTiket(this.txtTiket.getText());
        }
        
        if(serialPort==null)
            return;
        try
        {
            if(serialPort.isOpened())
                serialPort.closePort();//Close serial port
        }
        catch(SerialPortException e)
        {
            
        }
    }//GEN-LAST:event_formWindowClosing

    private void cmdCommitActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCommitActionPerformed
        // TODO add your handling code here:
//        this.txtTimbang.setText("500");
        try
        {
            if(serialPort.isOpened())
                serialPort.closePort();//Close serial port
            
            if(idTimbangan<1)
            {
//                this.setGross(this.txtTimbang.getText());
                this.setGross(this.txtBeratTampung.getText());
            }
            else
            {
                int gross = Integer.parseInt(this.txtGross.getText());
                int curMass = Integer.parseInt(this.txtBeratTampung.getText());
//                int curMass = Integer.parseInt(this.txtTimbang.getText());
                
                if(curMass>gross)
                {
                    this.setGross(String.valueOf(curMass));
                    this.setTara(String.valueOf(gross));
                    InOut = "OUT";
                    
//                    this.txtPo.setEnabled(false);
                }
                else
                {
                    this.setTara(String.valueOf(curMass));
                }
            }
        }
        catch(SerialPortException e)
        {
            
        }
    }//GEN-LAST:event_cmdCommitActionPerformed

    private void txtKeteranganKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtKeteranganKeyReleased
        // TODO add your handling code here:
        txtKeterangan.setText(txtKeterangan.getText().toUpperCase());
    }//GEN-LAST:event_txtKeteranganKeyReleased

    private void txtSupirKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSupirKeyReleased
        // TODO add your handling code here:
        txtSupir.setText(txtSupir.getText().toUpperCase());
    }//GEN-LAST:event_txtSupirKeyReleased

    private void txtRelasiKeyTyped(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtRelasiKeyTyped
        // TODO add your handling code here:
        txtRelasi.setText(txtRelasi.getText().toUpperCase());
    }//GEN-LAST:event_txtRelasiKeyTyped

    private void txtNoPolKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtNoPolKeyReleased
        // TODO add your handling code here:
        txtNoPol.setText(txtNoPol.getText().toUpperCase());
    }//GEN-LAST:event_txtNoPolKeyReleased

    private void txtPoKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtPoKeyReleased
        // TODO add your handling code here:
        txtPo.setText(txtPo.getText().toUpperCase());
    }//GEN-LAST:event_txtPoKeyReleased

    private void txtSjKeyReleased(java.awt.event.KeyEvent evt) {//GEN-FIRST:event_txtSjKeyReleased
        // TODO add your handling code here:
        txtSj.setText(txtSj.getText().toUpperCase());
    }//GEN-LAST:event_txtSjKeyReleased

    private void txtNoPolActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtNoPolActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtNoPolActionPerformed

    private void cmdCancelActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdCancelActionPerformed
        // TODO add your handling code here:
        int conf = JOptionPane.showConfirmDialog(null, "Apakah Anda Yakin Ingin Membatalkan Timbangan Ini?", "Konfirmasi", JOptionPane.OK_CANCEL_OPTION);
        if(conf==JOptionPane.OK_OPTION)
        {
            String msg = JOptionPane.showInputDialog(null, "Masukkan Alasan Pembatalan Data Ini. Jika Kosong, Maka Tidak Ada Pembatalan!!!", "Pembatalan", JOptionPane.INFORMATION_MESSAGE);
            if(msg!=null)
            {
                if(!msg.equals(""))
                {
                    if(ModTimbangan.updateBatal(idTimbangan, msg))
                    {
                        log.InsertLog("BATAL_TIMBANG", "Timbangan id="+idTimbangan+", NOTE= "+msg);
                        
                        JOptionPane.showMessageDialog(null, "Timbangan Berhasil Dibatalkan!!!","Batal",JOptionPane.INFORMATION_MESSAGE);
                        this.dispose();
                    }
                    else
                    {
                        JOptionPane.showMessageDialog(null, "Timbangan Gagal Dibatalkan!!!","Batal",JOptionPane.ERROR_MESSAGE);
                    }
                }
            }
        }            
    }//GEN-LAST:event_cmdCancelActionPerformed

    private void cmbNamaBarangActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbNamaBarangActionPerformed
        // TODO add your handling code here:
//        if(idTimbangan<1)
        
            this.setTiket("");
    }//GEN-LAST:event_cmbNamaBarangActionPerformed

    private void cmdTambahTimbanganActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmdTambahTimbanganActionPerformed
        // TODO add your handling code here:
        int nilaiTampung = Integer.parseInt(txtBeratTampung.getText());
        int nilaiTimbang = Integer.parseInt(txtTimbang.getText());
        
        String nilai = String.valueOf(nilaiTampung+nilaiTimbang);
        
        txtBeratTampung.setText(nilai);
    }//GEN-LAST:event_cmdTambahTimbanganActionPerformed

    
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JComboBox cmbNamaBarang;
    private javax.swing.JButton cmdCancel;
    private javax.swing.JButton cmdCommit;
    private javax.swing.JButton cmdPrint;
    private javax.swing.JButton cmdSimpan;
    private javax.swing.JButton cmdTambahTimbangan;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel11;
    private javax.swing.JLabel jLabel12;
    private javax.swing.JLabel jLabel13;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel18;
    private javax.swing.JLabel jLabel19;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel20;
    private javax.swing.JLabel jLabel21;
    private javax.swing.JLabel jLabel22;
    private javax.swing.JLabel jLabel23;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JFormattedTextField txtBeratTampung;
    private javax.swing.JFormattedTextField txtGross;
    private javax.swing.JFormattedTextField txtJamKeluar;
    private javax.swing.JFormattedTextField txtJamMasuk;
    private javax.swing.JTextField txtKeterangan;
    private javax.swing.JTextField txtKodeTimbangan;
    private javax.swing.JFormattedTextField txtNetto;
    private javax.swing.JTextField txtNoPol;
    private javax.swing.JTextField txtPo;
    private javax.swing.JTextField txtRelasi;
    private javax.swing.JTextField txtSj;
    private javax.swing.JTextField txtSupir;
    private javax.swing.JFormattedTextField txtTanggal;
    private javax.swing.JFormattedTextField txtTanggalKeluar;
    private javax.swing.JFormattedTextField txtTara;
    private javax.swing.JTextField txtTiket;
    private javax.swing.JTextField txtTimbang;
    // End of variables declaration//GEN-END:variables

    class SerialPortReader implements SerialPortEventListener
    {
        String msg = "";
        String timbangan = txtKodeTimbangan.getText();
        
        @Override
        public void serialEvent(SerialPortEvent e)
        {
            
            if(e.isRXCHAR()) //jika data ada
            {
                int gev = e.getEventValue();
                if(gev > 0)
                {
                    try
                    {
//                        System.out.println(timbangan);
                        
                        byte[] buffer = serialPort.readBytes(gev);
                        
//                        System.out.println(buffer);
                        
                        if(buffer!=null)
                        {
                            String sBuffer = new String(buffer);
                            String[] val = sBuffer.split(",");
                            System.out.println(sBuffer);
                             /*
                            Start timbangan satu indah jaya
                            */
                            if(timbangan=="A")
                            {
                                if(val.length==4)
                                {
    //                                System.out.println(sBuffer);
                                    msg = val[3];

                                }
                                if(val.length==1)
                                {
                                    msg += sBuffer;
                                    txtTimbang.setText(msg.replaceAll("kg", "").trim());
    //                                System.out.println(msg);
                                }
                            }
                            /*
                            End timbangan satu indah jaya
                            */

                            ///////////////////////////////////////////////////////////

                             /*
                            Start timbangan dua indah jaya
                            */
                            if(timbangan == "B")
                            {
                                if(val.length==2)
                                {
//                                    System.out.println(sBuffer);
                                    msg = val[1];
        //                            
                                }
                                if(val.length==1)
                                {
                                    msg += sBuffer;
                                    txtTimbang.setText(msg.replaceAll("kg", "").trim());
//                                    System.out.println(msg);
                                }
                            }
                            /*
                            End timbangan dua indah jaya
                            */
                        }
                        
//                        System.out.println(sBuffer+" = "+val.length);
                        
                       
                    }
                    catch(SerialPortException spe)
                    {
                        spe.printStackTrace();
                    }
                }
            }
        }
    }

}


